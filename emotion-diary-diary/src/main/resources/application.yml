spring:
  application:
    name: ediary-diary
  config:
    import:
      - application-db.yml
  security:
    strategy: MODE_INHERITABLETHREADLOCAL

eureka:
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:9761/eureka

resilience4j:
  circuitbreaker:
    configs:
      default:
        failure-rate-threshold: 4
        wait-duration-in-open-state:
          seconds: 4
        sliding-window-type: count_based
        sliding-window-size: 2
  timelimiter:
    configs:
      default:
        timeout-duration:
          seconds: 4
          
server:
  port: 0

management:
  tracing:
    sampling:
      probability: 1.0
    propagation:
      consume: B3
      produce: B3_MULTI
  zipkin:
    tracing:
      endpoint: "http://localhost:9411/api/v2/spans"
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, httpexchanges, busrefresh, info, metrics, prometheus

logging:
  level:
    com.emotion.emotiondiarydiary.api: DEBUG
  pattern:
    level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]'